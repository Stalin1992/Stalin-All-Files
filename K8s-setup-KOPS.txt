Create 1 EC2 instance

sudo yum update -y
#install AWSCLI

sudo yum install unzip
curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
unzip awscliv2.zip
sudo ./aws/install

#Install kubectl

curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

#Create an IAM user/role with Route53, EC2, IAM and S3 full access or just with AdministratorAccess

#Attach IAM role to EC2 server

#Note: If you create IAM user with programmatic access then provide Access keys.
  aws configure

#Install kops on EC2 instance:

curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops

#Create a Route53 private hosted zone (you can create Public hosted zone if you have a domain)

#create an S3 bucket

aws s3 mb s3://dev.k8s.chandradc.in

#Expose environment variable:

export KOPS_STATE_STORE=s3://dev.k8s.chandradc.in

#Create sshkeys before creating cluster

ssh-keygen

#Create kubernetes cluster definitions on S3 bucket
## check this url ---  https://github.com/kubernetes/kops/blob/master/docs/cli/kops_create_cluster.md


kops create cluster --cloud=aws --zones=us-east-1a --name=dev.k8s.chandradc.in --dns-zone=chandradc.in --dns private

kops create cluster --cloud=aws --zones=us-east-1a,us-east-1b,us-east-1c --name=dev.k8s.chandradc.in --dns-zone=chandradc.in --dns private --node-count=2 --master-size=t2.micro --node-size=t2.micro --master-image=ami-087c17d1fe0178315 --node-image=ami-087c17d1fe0178315

#Create kubernetes cluser

kops update cluster dev.k8s.chandradc.in --yes

kops export kubecfg --admin

#Validate your cluster - it will take 10-15 min based on the size of the cluster ..wait

kops validate cluster

#If any Error during validation run the below commands:

kops export kubecfg --admin

#Validate your cluster

kops validate cluster

#To list nodes

kubectl get nodes 

#Deploying Nginx container on Kubernetes
#Deploying Nginx Container

kubectl create deployment mynginx --image=nginx --replicas=2

kubectl get pods
kubectl get deployments

#Expose the deployment as service. This will create an ELB in front of those 2 containers and allow us to publicly access them:

kubectl expose deployment mynginx --port=80 --type=LoadBalancer


kubectl get services -o wide

To delete cluster

kops delete cluster dev.k8s.chandradc.in --yes









